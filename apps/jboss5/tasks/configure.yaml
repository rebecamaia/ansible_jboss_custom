
#Check if JBoss already exists

- name: Check JBoss Files
  stat:
    path: "{{ item }}"
  with_items:
    - "/opt/jboss"
    - "/opt/jboss/server/{{ instance_control.value }}/deploy/deploy/jbossweb.sar/server.xml"
    - "/opt/jboss/server/{{ instance_control.value }}/conf/java_opts.conf"
    - "/opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/profile.xml"
    - "/opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/vfs.xml"
    - "/opt/jboss/server/{{ instance_control.value }}"
  register: check_file

- name: Create Instace Dir
  file:
    path: /opt/jboss/server/{{ instance_control.value }}
    state: directory
  when:
    - check_file.results[5].stat.exists == false

- name: Copy instance dir
  command: cp -r /opt/jboss/server/default/. /opt/jboss/server/{{ instance_control.value }}/
  when:
    - check_file.results[2].stat.exists == false

- name: Activate instance
  file:
    path: /opt/jboss/server/{{ instance_control.value }}/.inativa
    state: absent

#Changing owner and group in case dir exists
- name: Change owner and group for JBoss Dir
  file:
    recurse: yes
    path: /opt/jboss
    owner: sistemas
    group: sistemas
    state: directory
  when:
    - check_file.results[0].stat.exists == true


#Check for controle variables

- name: Define values for java_opts
  template:
    src: java_opts.conf.j2
    dest: /opt/jboss/server/{{ instance_control.value }}/conf/java_opts.conf
  when:
    - change_config == true or force_reinstall == true
 
- name: Define values for server.xml
  template:
    src: server.xml.j2
    dest: /opt/jboss/server/{{ instance_control.value }}/deploy/jbossweb.sar/server.xml
  when:
    - change_config == true or force_reinstall == true
 
- name: Define values for profile.xml
  template:
    src: profile.xml.j2
    dest: /opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/profile.xml
  when:
    - change_config == true or force_reinstall == true
 
- name: Define values for vfs.xml
  template:
    src: vfs.xml.j2
    dest: /opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/vfs.xml
  when:
    - change_config == true or force_reinstall == true 

- name: Create Ear Dir
  file:
    path: /opt/sistemas/ear_{{ instance_control.value }}
    state: directory

- name: Define values for postgres-ds
  template:
    src: postgres-ds.xml.j2
    dest: /opt/sistemas/ear_{{ instance_control.value }}/postgres-ds.xml
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true

- replace:
    path: /opt/jboss/server/{{ instance_control.value }}/conf/java_opts.conf
    regexp: "(INSTNAME)"
    replace: "{{ instance_control.value }}"
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true

- replace:
    path: /opt/jboss/server/{{ instance_control.value }}/conf/java_opts.conf
    regexp: "(PORTNUM)"
    replace: "{{ instance_control.key }}"
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true

- replace:
    path: /opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/vfs.xml
    regexp: "(INSTNAME)"
    replace: "file:/opt/sistemas/ear_{{ instance_control.value }}"
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true

- replace:
    path: /opt/jboss/server/{{ instance_control.value }}/conf/bootstrap/profile.xml
    regexp: "(INSTNAME)"
    replace: "file:/opt/sistemas/ear_{{ instance_control.value }}"
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true

- replace:
    path: /opt/jboss/server/{{ instance_control.value }}/deploy/jbossweb.sar/server.xml
    regexp: "(INSTNAME)"
    replace: "{{ instance_control.value }}"
  notify: Restart JBoss
  when:
    - change_config == true or force_reinstall == true